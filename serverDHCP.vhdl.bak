library IEEE;
use IEEE.STD_LOGIC_1164.ALL;
use IEEE.NUMERIC_STD.ALL;

entity dhcp_system_textio is
    Port (
        clk         : in  std_logic;
        reset       : in  std_logic;
        enable_dhcp : in  std_logic; -- Input untuk mengaktifkan DHCP
        vlan_id     : in  std_logic_vector(7 downto 0); -- VLAN ID end device
        ip_address  : out std_logic_vector(31 downto 0); -- IP Address yang dialokasikan
        status      : out std_logic -- Status (1: sukses, 0: gagal)
    );
end dhcp_system_textio;

entity tb_dhcp_system_textio is
end tb_dhcp_system_textio;

architecture Structural of dhcp_system_textio is

    -- Sinyal untuk menghubungkan modul-modul internal
    signal current_state : std_logic_vector(2 downto 0); -- FSM state
    signal valid_vlan    : std_logic; -- Validasi VLAN
    signal ip_allocated  : std_logic_vector(31 downto 0); -- IP dialokasikan
    signal ip_valid      : std_logic; -- Validasi IP alokasi

begin

    -- FSM DHCP Server
    dhcp_fsm: entity work.dhcp_fsm_textio
    port map (
        clk           => clk,
        reset         => reset,
        enable_dhcp   => enable_dhcp,
        current_state => current_state,
        ip_allocated  => ip_allocated,
        ip_valid      => ip_valid
    );

    -- VLAN Manager
    vlan_manager: entity work.vlan_manager_textio
        port map (
            clk        => clk,
            vlan_id    => vlan_id,
            valid_vlan => valid_vlan
        );

    -- Output logic
    ip_address <= ip_allocated when ip_valid = '1' and valid_vlan = '1' else (others => '0');
    status <= '1' when ip_valid = '1' and valid_vlan = '1' else '0';

end Structural;